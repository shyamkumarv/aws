project--1

1)Go To Aws Take one instance 
2)Connect That Instance Through Putty


Putty

3)aws configure

4)Once Exeute This command 
Enter Acess key:
Enter Scerate key:
Default Region:ex: us-east-1 [https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#Instances:sort=desc:tag:Name)
Output Language:Json


Getting Acess Key And Secrate purpose:
Go To Aws Usersetting-->My security Credentials---Your security credentials-->

Access Keys (Access Key ID and Secret Access Key)

click + symbol   now click create new Acess key --once you click download   one .csv file   Now Getting Acess key:#####  Enter Scerate key:###

5)now install git

6)git clone https://github.com/jicowan/hello-world

7)aws cloudformation create-stack --template-body file://ecs-cluster.template --stack-name EcsClusterStack --capabilities CAPABILITY_IAM --tags Key=Name,Value=ECS --region us-west-2 --parameters ParameterKey=KeyName,ParameterValue=<key_name> ParameterKey=EcsCluster,ParameterValue=getting-started ParameterKey=AsgMaxSize,ParameterValue=2

Note :plese change region=  as per select
     :parameter value=pem key Name(write pem key name with out extension)

now in  cloud fromation "EcsClusterStack"  one stack is cretaed... plese wait  for  Status:

    CREATE_COMPLETE


8)Create a Jenkins Server

aws cloudformation create-stack --template-body file://ecs-jenkins-demo.template --stack-name JenkinsStack --capabilities CAPABILITY_IAM --tags Key=Name,Value=Jenkins --region us-west-2 --parameters ParameterKey=EcsStackName,ParameterValue=EcsClusterStack

Note :plese change region=as per select
     :parameter key=pem key Name(write pem key name with out extension)

now in  cloud fromation "JenkinsStack"  one stack is cretaed... plese wait  for  Status:



    CREATE_COMPLETE


Now go to ec2 dashboard now you got 4 instence 
1)cicd
2)JenkinsStack
3)ECS Instance - EcsClusterStack
4)ECS Instance - EcsClusterStack


9)copy the jenkinsstack :ip address  ----browser in google :###########:8080

before that set inbound rules:8080 anywhere customtcp for jenkinsstack(instance)

now connect putty for jenkins


now cat /var/lib/jenkins/secrets/initialAdminPassword

get password and paste in jenkins server

now craete ECR REpository bewlow is command

aws ecr create-repository --repository-name hello-world --region us-west-1

execute this command

After execution plese copy the below script


Note:set Reagion As per select instance



now check connection  between  jenkins and ECR  below is command

 aws ecr get-login --region us-west-1



now install two plugins
1)awazon ecr plugins
2)cloud bees docker build and publish plugin


install wirhout restart



create name job:cicd


project name:cicd

github project:https://github.com/jicowan/hello-world.git/

Source Code Management
-----------------------
git

https://github.com/jicowan/hello-world.git


Branches to build:*/master

-----------
build envinorment

commad :    
 #!/bin/bash
DOCKER_LOGIN=`aws ecr get-login --region us-east-1`
${DOCKER_LOGIN}



docker build and  publish

Repository Name:hello-world


Tag	v_$BUILD_NUMBER


Docker registry URL	:https://861594732748.dkr.ecr.us-east-1.amazonaws.com/hello-world

execute shell:
#!/bin/bash
#Constants

REGION=us-east-1
REPOSITORY_NAME=hello-world
CLUSTER=getting-started
FAMILY=`sed -n 's/.*"family": "\(.*\)",/\1/p' taskdef.json`
NAME=`sed -n 's/.*"name": "\(.*\)",/\1/p' taskdef.json`
SERVICE_NAME=${NAME}-service

#Store the repositoryUri as a variable
REPOSITORY_URI=`aws ecr describe-repositories --repository-names ${REPOSITORY_NAME} --region ${REGION} | jq .repositories[].repositoryUri | tr -d '"'`

#Replace the build number and respository URI placeholders with the constants above
sed -e "s;%BUILD_NUMBER%;${BUILD_NUMBER};g" -e "s;%REPOSITORY_URI%;${REPOSITORY_URI};g" taskdef.json > ${NAME}-v_${BUILD_NUMBER}.json
#Register the task definition in the repository
aws ecs register-task-definition --family ${FAMILY} --cli-input-json file://${WORKSPACE}/${NAME}-v_${BUILD_NUMBER}.json --region ${REGION}
SERVICES=`aws ecs describe-services --services ${SERVICE_NAME} --cluster ${CLUSTER} --region ${REGION} | jq .failures[]`
#Get latest revision
REVISION=`aws ecs describe-task-definition --task-definition ${NAME} --region ${REGION} | jq .taskDefinition.revision`

#Create or update service
if [ "$SERVICES" == "" ]; then
  echo "entered existing service"
  DESIRED_COUNT=`aws ecs describe-services --services ${SERVICE_NAME} --cluster ${CLUSTER} --region ${REGION} | jq .services[].desiredCount`
  if [ ${DESIRED_COUNT} = "0" ]; then
    DESIRED_COUNT="1"
  fi
  aws ecs update-service --cluster ${CLUSTER} --region ${REGION} --service ${SERVICE_NAME} --task-definition ${FAMILY}:${REVISION} --desired-count ${DESIRED_COUNT}
else
  echo "entered new service"
  aws ecs create-service --service-name ${SERVICE_NAME} --desired-count 1 --task-definition ${FAMILY} --cluster ${CLUSTER} --region ${REGION}
fi




